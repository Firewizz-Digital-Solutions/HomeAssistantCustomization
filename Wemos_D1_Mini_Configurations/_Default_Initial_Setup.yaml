# FIREWIZZ DIGITAL SOLUTIONS
# 
# Default config for the Wemos D1 Mini for usage in combination with 4 relay print
# Has configured:
# - 4 Relay output switches (connect to relay board)
# - 1 General purpose binary input
# - 1 Pulse counter (configured for pulses per minute)
# - 1 3.3v Analog input

# Esp base settings
esphome:
  name: controller-name # Name of the "controller"
  friendly_name: controller-name # A friendly name
  platform: ESP8266 # Print platform
  board: esp01_1m  # ESP8266-based board with 1MB flash memory

# Enable logging to provide debug output for troubleshooting
logger:

# Enable Home Assistant API for integration with Home Assistant
api:

# Over-the-air (OTA) update settings
ota:
  platform: esphome
  password: "somePassword"  # Secure the OTA updates with a password

# Wi-Fi setup
wifi:
  ssid: "MyWifi"
  password: "MyWiFiPassword"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "controller-name"
    password: "ap_password"

  # Optional static IP configuration
  # Uncomment and customize if a static IP is preferred
  #manual_ip:
  #  static_ip: 10.0.1.118
  #  # Set this to the IP address of the router. Often ends with .1
  #  gateway: 10.0.0.1
  #  # The subnet of the network. 255.255.255.0 works for most home networks.
  #  subnet: 255.255.0.0

# Fallback captive portal configuration (used with the AP above)
captive_portal:

# Web server to access the controller directly via a web browser
web_server:
  port: 80  # Web server accessible at IP address on port 80
  version: 3  # Web server protocol version

# Sensor configurations
sensor:
  # Analog input sensor (3.3V max), output as percentage
  - platform: adc
    pin: A0
    name: "[A0] Analog Input Percentage"
    update_interval: 60s
    unit_of_measurement: "%"
    accuracy_decimals: 2
    filters:
      - multiply: 100.0 # Convert ADC reading to a percentage
      - lambda: return x / 1023.0; # Normalize the ADC range to 0-100%

  # Pulse counter for measuring pulses per minute (e.g., water meter or energy meter)      
  - platform: pulse_counter
    pin:
      number: GPIO13
      mode:
        input: true
        pullup: true # Enable internal pull-up resistor
    update_interval: 60s
    name: "[D7] Pulse counter (p/min)"
    filters:
      - lambda: return x / 60.0;  # Convert pulses to rate per minute

  # Wi-Fi signal strength monitor     
  - platform: wifi_signal
    name: "ESP WiFi Signal Strength"
    update_interval: 60s

  # System uptime in seconds  
  - platform: uptime
    name: "Uptime Seconds"
    id: uptime_seconds 

  # System uptime in days (calculated from uptime in seconds)
  - platform: template
    name: "Uptime Days"
    lambda: |-
      return (id(uptime_seconds).state / 86400.0); # Convert seconds to days
    unit_of_measurement: "days"

# Text sensor to display IP address and BSSID
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "ESP IP Address"
    bssid:
      name: "ESP BSSID"

# Status LED (typically connected to GPIO2) to indicate Wi-Fi connection status
status_led:
  pin: GPIO2

# Relay switch configurations
switch:
  # Relay 1 on GPIO5 [D1]
  - platform: gpio
    pin: GPIO5
    name: "[D1] Relay 1"
    id: d1
    restore_mode: ALWAYS_OFF # Ensures relay stays off after power cycle, other options include ALWAYS_ON, RESTORE_DEFAULT_OFF, and RESTORE_DEFAULT_ON
    inverted: true

  # Relay 2 on GPIO4 [D2]
  - platform: gpio
    pin: GPIO4
    name: "[D2] Relay 2"
    id: d2
    restore_mode: ALWAYS_OFF # Ensures relay stays off after power cycle, other options include ALWAYS_ON, RESTORE_DEFAULT_OFF, and RESTORE_DEFAULT_ON
    inverted: true

  # Relay 3 on GPIO14 [D5] (unstable in some setups, if pulled on startup)
  - platform: gpio
    pin: GPIO14
    name: "[D5] Relay 3" # Note: Can be unstable
    id: d5
    inverted: true
    restore_mode: ALWAYS_OFF # Ensures relay stays off after power cycle, other options include ALWAYS_ON, RESTORE_DEFAULT_OFF, and RESTORE_DEFAULT_ON

  # Relay 4 on GPIO12 [D6]
  - platform: gpio
    pin: GPIO12
    name: "[D6] Relay 4"
    id: d6
    inverted: true
    restore_mode: ALWAYS_OFF # Ensures relay stays off after power cycle, other options include ALWAYS_ON, RESTORE_DEFAULT_OFF, and RESTORE_DEFAULT_ON

# Binary sensors
binary_sensor:
  # Monitor boot pin, for status monitoring only, not control
  - platform: gpio
    pin: 
      number: 00
      mode:
        input: true
        pullup: true # Use the pull-up resistor on this pin
      inverted: true
    name: "[D3] FLASH BOOT Monitor" # Only monitor state, do not use the pin
    id: d3

  # General-purpose binary input on GPIO12
  - platform: gpio
    pin:
      number: GPIO16
      mode:
        input: true
        pullup: true # Use the pull-up resistor on this pin
      inverted: true
    name: "[D0] General binary input"

  # Monitor the deviceâ€™s connection status
  - platform: status
    name: "ESP Device Status"

# Interval for conditional actions
interval:
  # If the device disconnects for 5 minutes, turn off all relays
  - interval: 300s
    then:
      - if:
          condition:
            - not:
                api.connected:   # Check for loss of API connection
          else:
            - switch.turn_off: d1
            - switch.turn_off: d2
            - switch.turn_off: d5
            - switch.turn_off: d8
